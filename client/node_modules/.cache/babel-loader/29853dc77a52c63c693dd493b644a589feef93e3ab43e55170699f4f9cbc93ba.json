{"ast":null,"code":"var _jsxFileName = \"/Users/janicewong/repos/stack-app/client/src/components/StackCard/StackCard.tsx\";\nimport React from 'react';\nimport './StackCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackCard = ({\n  stack\n}) => {\n  const copyStackURLToClipboard = () => {\n    const stackLink = `${window.location.origin}/stack/${stack.id}`;\n    navigator.clipboard.writeText(stackLink).then(() => {\n      alert('Link copied to clipboard!');\n    }).catch(err => {\n      console.error('Failed to copy: ', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stack-card-title\",\n      children: stack.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: copyStackURLToClipboard,\n      children: \"Copy Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = StackCard;\nexport default StackCard;\nvar _c;\n$RefreshReg$(_c, \"StackCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StackCard","stack","copyStackURLToClipboard","stackLink","window","location","origin","id","navigator","clipboard","writeText","then","alert","catch","err","console","error","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/janicewong/repos/stack-app/client/src/components/StackCard/StackCard.tsx"],"sourcesContent":["import React from 'react';\nimport './StackCard.css';\n\ninterface Item {\n    type: string;\n    content: string;\n}\n\ninterface Stack {\n    id: number;\n    title: string;\n    description: string;\n    items: Item[];\n}\n\ninterface StackCardProps {\n    stack: Stack;\n}\n\nconst StackCard: React.FC<StackCardProps> = ({ stack }) => {\n\n    const copyStackURLToClipboard = () => {\n        const stackLink = `${window.location.origin}/stack/${stack.id}`;\n        navigator.clipboard.writeText(stackLink).then(() => {\n            alert('Link copied to clipboard!');\n        }).catch(err => {\n            console.error('Failed to copy: ', err);\n        });\n    };\n\n    return (\n        <div className=\"stack-card\">\n            <div className=\"stack-card-title\">{stack.title}</div>\n            <button onClick={copyStackURLToClipboard}>Copy Link</button>\n        </div>\n    )\n}\n\nexport default StackCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkBzB,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAEvD,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IAClC,MAAMC,SAAS,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,UAAUL,KAAK,CAACM,EAAE,EAAE;IAC/DC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACP,SAAS,CAAC,CAACQ,IAAI,CAAC,MAAM;MAChDC,KAAK,CAAC,2BAA2B,CAAC;IACtC,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEF,GAAG,CAAC;IAC1C,CAAC,CAAC;EACN,CAAC;EAED,oBACIf,OAAA;IAAKkB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBnB,OAAA;MAAKkB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAEjB,KAAK,CAACkB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrDxB,OAAA;MAAQyB,OAAO,EAAEtB,uBAAwB;MAAAgB,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd,CAAC;AAAAE,EAAA,GAjBKzB,SAAmC;AAmBzC,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}