{"ast":null,"code":"var _jsxFileName = \"/Users/janicewong/repos/stack-app/client/src/components/CreateStackModal/CreateStackModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Box, Button, TextField, IconButton, Typography, List, ListItem } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 500,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 2\n};\nconst CreateStackModal = ({\n  show,\n  handleClose,\n  addStack\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [links, setLinks] = useState([]);\n  const [linkInput, setLinkInput] = useState('');\n  const handleAddLink = () => {\n    if (linkInput.trim()) {\n      setLinks([...links, linkInput]);\n      setLinkInput('');\n    }\n  };\n  const handleCreateStack = () => {\n    if (title.trim() && description.trim() && links.length > 0) {\n      const items = links.map(link => ({\n        type: 'link',\n        content: link\n      }));\n      addStack({\n        title,\n        description,\n        items\n      });\n      setTitle('');\n      setDescription('');\n      setLinks([]);\n      handleClose();\n    }\n  };\n  const handleCloseModal = () => {\n    setTitle('');\n    setDescription('');\n    setLinks([]);\n    setLinkInput('');\n    handleClose();\n  };\n  if (!show) {\n    return null;\n  }\n  return (\n    /*#__PURE__*/\n    // <div className=\"modal\">\n    //     <div className=\"modal-content\">\n    //         <span className=\"close\" onClick={handleCloseModal}>\n    //             &times;\n    //         </span>\n    //         <h2>Create New Stack</h2>\n    //         <input\n    //             type=\"text\"\n    //             value={title}\n    //             onChange={(e) => setTitle(e.target.value)}\n    //             placeholder=\"Stack Title\"\n    //         />\n    //         <textarea\n    //             value={description}\n    //             onChange={(e) => setDescription(e.target.value)}\n    //             placeholder=\"Stack Description\"\n    //         />\n    //         <div className=\"links-container\">\n    //             <input \n    //                 type=\"text\"\n    //                 value={linkInput}\n    //                 onChange={(e) => setLinkInput(e.target.value)}\n    //                 placeholder=\"Enter link\"\n    //             />\n    //             <button onClick = {handleAddLink}>Add Link</button>\n    //             <ul className=\"links-list\">\n    //                 {links.map((link, index) =>(\n    //                     <li key={index}>{link}</li>\n    //                 ))}\n    //             </ul>\n    //         </div>\n    //         <button onClick={handleCreateStack}>Create Stack</button>\n    //     </div>\n    // </div>\n    _jsxDEV(Modal, {\n      open: show,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"close\",\n          onClick: handleCloseModal,\n          sx: {\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: theme => theme.palette.grey[500]\n          },\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h2\",\n          gutterBottom: true,\n          children: \"Create New Stack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Stack Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          fullWidth: true,\n          multiline: true,\n          sx: {\n            p: 0,\n            m: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Stack Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          fullWidth: true,\n          rows: 4,\n          multiline: true,\n          sx: {\n            p: 0,\n            m: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Enter link\",\n            value: linkInput,\n            onChange: e => setLinkInput(e.target.value),\n            fullWidth: true,\n            multiline: true,\n            sx: {\n              p: 0,\n              m: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAddLink,\n            sx: {\n              arginLeft: 2\n            },\n            children: \"Add Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: links.map((link, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: link\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleCreateStack,\n          sx: {\n            marginTop: 2\n          },\n          fullWidth: true,\n          children: \"Create Stack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(CreateStackModal, \"h/Wdzn/bFtamwluyKC9gplFmGzg=\");\n_c = CreateStackModal;\nexport default CreateStackModal;\nvar _c;\n$RefreshReg$(_c, \"CreateStackModal\");","map":{"version":3,"names":["React","useState","Modal","Box","Button","TextField","IconButton","Typography","List","ListItem","CloseIcon","jsxDEV","_jsxDEV","style","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","CreateStackModal","show","handleClose","addStack","_s","title","setTitle","description","setDescription","links","setLinks","linkInput","setLinkInput","handleAddLink","trim","handleCreateStack","length","items","map","link","type","content","handleCloseModal","open","onClose","children","sx","onClick","right","color","theme","palette","grey","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","label","value","onChange","e","target","fullWidth","multiline","m","rows","display","alignItems","marginTop","arginLeft","index","_c","$RefreshReg$"],"sources":["/Users/janicewong/repos/stack-app/client/src/components/CreateStackModal/CreateStackModal.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\nimport { Modal, Box, Button, TextField, IconButton, Typography, List, ListItem } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\ninterface ModalProps {\n    show: boolean;\n    handleClose: () => void;\n    addStack: (stack: { title: string; description: string; items: { type: string; content: string }[] }) => void;\n}\n\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 500,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n    borderRadius: 2,\n};\n\nconst CreateStackModal: FC<ModalProps> = ({ show, handleClose, addStack }) => {\n    \n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [links, setLinks] = useState<string[]>([]);\n    const [linkInput, setLinkInput] = useState('');\n\n    const handleAddLink = () => {\n        if (linkInput.trim()) {\n            setLinks([...links, linkInput]);\n            setLinkInput('');\n        }\n    };\n    \n    const handleCreateStack = () => {\n        if (title.trim() && description.trim() && links.length > 0) {\n            const items = links.map(link => ({ type: 'link', content: link}));\n            addStack({ title, description, items });\n            setTitle('');\n            setDescription('');\n            setLinks([]);\n            handleClose();\n        }\n    };\n\n    const handleCloseModal = () => {\n        setTitle('');\n        setDescription('');\n        setLinks([]);\n        setLinkInput('');\n        handleClose();\n    }\n\n    if (!show) {\n        return null;\n    }\n\n    return (\n        // <div className=\"modal\">\n        //     <div className=\"modal-content\">\n        //         <span className=\"close\" onClick={handleCloseModal}>\n        //             &times;\n        //         </span>\n        //         <h2>Create New Stack</h2>\n        //         <input\n        //             type=\"text\"\n        //             value={title}\n        //             onChange={(e) => setTitle(e.target.value)}\n        //             placeholder=\"Stack Title\"\n        //         />\n        //         <textarea\n        //             value={description}\n        //             onChange={(e) => setDescription(e.target.value)}\n        //             placeholder=\"Stack Description\"\n        //         />\n        //         <div className=\"links-container\">\n        //             <input \n        //                 type=\"text\"\n        //                 value={linkInput}\n        //                 onChange={(e) => setLinkInput(e.target.value)}\n        //                 placeholder=\"Enter link\"\n        //             />\n        //             <button onClick = {handleAddLink}>Add Link</button>\n        //             <ul className=\"links-list\">\n        //                 {links.map((link, index) =>(\n        //                     <li key={index}>{link}</li>\n        //                 ))}\n        //             </ul>\n        //         </div>\n        //         <button onClick={handleCreateStack}>Create Stack</button>\n        //     </div>\n        // </div>\n        <Modal open={show} onClose={handleCloseModal}>\n            <Box sx={style}>\n                <IconButton\n                    aria-label=\"close\"\n                    onClick={handleCloseModal}\n                    sx={{\n                        position: 'absolute',\n                        right: 8,\n                        top: 8,\n                        color: (theme) => theme.palette.grey[500],\n                    }}\n                >\n                    <CloseIcon />\n                </IconButton>\n                <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n                    Create New Stack\n                </Typography>\n                <TextField\n                    label=\"Stack Title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    fullWidth\n                    multiline\n                    sx={{ p: 0, m: 0 }}\n                />\n                <TextField\n                    label=\"Stack Description\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    fullWidth\n                    rows={4}\n                    multiline\n                    sx={{ p: 0, m: 0 }}\n                />\n                <Box sx={{display: 'flex', alignItems: 'center', marginTop: 2}}>\n                    <TextField\n                        label=\"Enter link\"\n                        value={linkInput}\n                        onChange={(e) => setLinkInput(e.target.value)}\n                        fullWidth\n                        multiline\n                        sx={{ p: 0, m: 0 }}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleAddLink} sx={{ arginLeft: 2 }}>\n                        Add Link\n                    </Button>\n                </Box>\n                <List>\n                    {links.map((link, index) => (\n                        <ListItem key={index}>\n                            {link}\n                        </ListItem>\n                    ))}\n                </List>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleCreateStack}\n                    sx={{ marginTop: 2 }}\n                    fullWidth\n                >\n                    Create Stack\n                </Button>\n            </Box>\n        </Modal>\n    );\n}\n\nexport default CreateStackModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}